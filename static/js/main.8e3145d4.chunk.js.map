{"version":3,"sources":["Header/Header.js","Footer/Footer.js","config.js","Form/Form.js","Button/Button.js","Notes/Notes.js","UpdateNote/UpdateNote.js","App/App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","className","Config","apiGetURL","apiGetIdURL","apiDeleteURL","apiUpdateURL","apiPostURL","Form","notes","useState","date","setDate","diet","setDiet","mood","setMood","symptoms","setSymptoms","exercise","setExercise","handleChange","e","name","target","value","onSubmit","preventDefault","note","axios","post","htmlFor","type","id","onChange","required","rows","Button","showAddTask","onClick","style","backgroundColor","Notes","setNotes","isLoading","setIsLoading","useEffect","get","then","res","data","handleDelete","getAttribute","delete","noteElements","map","index","Moment","format","href","_id","$oid","UpdateNote","props","previousId","setPreviousId","match","params","put","App","setAddTask","toggleShowAddTask","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3145d4.chunk.js","sourcesContent":["import './Header.css';\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>Health Tracker App</h1> \n        </header>\n    )\n}\n\nexport default Header;","import './Footer.css';\n\nconst Footer = () => {\n    return (\n        <footer className=\"sticky-footer\">\n            <p>Copyright &copy; 2021 Jon Hay</p>  \n        </footer>\n    )\n}\n\nexport default Footer\n","  const Config = {\n    //Store urls for apis\n    apiGetURL: 'https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/health-tracker-utboe/service/Notes/incoming_webhook/notes',\n    apiGetIdURL: 'https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/health-tracker-utboe/service/Note/incoming_webhook/Note',\n    apiDeleteURL: 'https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/health-tracker-utboe/service/Notes-Delete/incoming_webhook/Notes-Delete',\n    apiUpdateURL: 'https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/health-tracker-utboe/service/Notes-Update/incoming_webhook/Notes-Update',\n    apiPostURL: 'https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/health-tracker-utboe/service/Notes-Post/incoming_webhook/Notes-Post'\n }\n\n export default Config;","import {useState} from 'react';\nimport './Form.css';\nimport axios from 'axios';\n\n//Import config\nimport Config from '../config';\n\nconst Form = ({notes}) => {\n\n    const [date, setDate] = useState('');\n    const [diet, setDiet] = useState('');\n    const [mood, setMood] = useState('');\n    const [symptoms, setSymptoms] = useState('');\n    const [exercise, setExercise] = useState('');\n\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n         if (name === 'date') {\n             setDate(value);\n         } else if (name === 'diet') {\n             setDiet(value);\n         } else if (name === 'mood') {\n             setMood(value);\n         } else if (name === 'symptoms') {\n             setSymptoms(value);\n         } else if (name === 'exercise') {\n             setExercise(value);\n         }\n    }\n\n    const handleSubmit = (e) => {\n        //Prevent Default Form Behavior\n        e.preventDefault();\n\n    \n        //Create object with form values\n        const note = {\n            diet,\n            mood,\n            symptoms,\n            exercise\n        }\n        \n        //Post Note using API\n        axios.post(`${Config.apiPostURL}`, note)\n       \n\n        //Clear state for all form fields\n        setDate('');\n        setDiet('');\n        setMood('');\n        setSymptoms('');\n        setExercise('');\n        \n        \n    }\n\n    return (\n        <div className=\"form\">\n            <h2>Add Note</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"mb-3 form-div\">\n                    <label htmlFor=\"date\" className=\"form-label\">Date</label>\n                    <input type=\"date\" className=\"form-control\" id=\"date\" name=\"date\" value={date} onChange={handleChange} required/>\n                </div>\n                <div className=\"mb-3 form-div\">\n                    <label htmlFor=\"diet\" className=\"form-label\">Diet</label>\n                    <textarea className=\"form-control\" id=\"diet\" name=\"diet\" rows=\"3\" onChange={handleChange} value={diet} required></textarea>\n                </div>\n                <div className=\"mb-3 form-div\">\n                    <label htmlFor=\"mood\" className=\"form-label\">Mood</label>\n                    <textarea className=\"form-control\" id=\"mood\" name=\"mood\" rows=\"3\" onChange={handleChange} value={mood} required></textarea>\n                </div>\n                <div className=\"mb-3 form-div\">\n                    <label htmlFor=\"symptoms\" className=\"form-label\">Symptoms</label>\n                    <textarea className=\"form-control\" id=\"symptoms\" name=\"symptoms\" rows=\"3\" onChange={handleChange} value={symptoms}></textarea>\n                </div>\n                <div className=\"mb-3 form-div\">\n                    <label htmlFor=\"exercise\" className=\"form-label\">Exercise</label>\n                    <textarea className=\"form-control\" id=\"exercise\" name=\"exercise\" rows=\"3\" onChange={handleChange} value={exercise}></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary w-75\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;\n","import React from 'react'\nimport './Button.css';\n\nconst Button = ({showAddTask, onClick}) => {\n\n    //Style Variable - Background color is based on showAddTask value\n    const style = {\n        backgroundColor: showAddTask ? '#adb5bd' : '#0d6efd'\n    }\n    return (\n        <div className='button'>\n            {/*Text and background color is based on showAddTask value*/}\n            <button onClick={onClick} className=\"btn\" style={style}>{showAddTask ? 'Close' : 'Add'}</button>\n        </div>\n    )\n}\n\nexport default Button\n","import {useState, useEffect} from 'react';\n\n//Import modules\nimport axios from 'axios';\nimport Moment from 'moment';\n\n//import CSS\nimport './Notes.css';\n\n//Import config\nimport Config from '../config';\n\n//Import Components\nimport Form from '../Form/Form';\nimport Button from '../Button/Button';\n\n\nconst Notes = ({onClick, showAddTask}) => {\n    const [notes, setNotes] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        //Set isLoading to true \n        setIsLoading(true);\n        axios.get(`${Config.apiGetURL}`)\n        .then(res => {\n            setNotes(res.data);\n        })\n\n          //Set isLoading to false\n          setIsLoading(false)\n    }, [notes])\n\n    const handleDelete = (e) => {\n        //Prevent default behavior\n        e.preventDefault();\n\n        //Get id\n        const id = e.target.getAttribute('data-index');\n\n        //Send delete request to api\n        axios.delete(`${Config.apiDeleteURL}?Id=${id}`);\n    }\n\n    const noteElements = notes ?\n    notes.map((note, index) => \n        ( \n            <div className=\"card\" key={note._id.$oid}>\n                <div className=\"card-header\">\n                    <p>{Moment(note.date).format('MMMM Do YYYY')}</p>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\" value={note.diet}></li>\n                    <li className=\"list-group-item\">Mood: {note.mood}</li>\n                    <li className=\"list-group-item\">Symptoms: {note.symptoms}</li>\n                    <li className=\"list-group-item\">Exercise: {note.exercise}</li>\n                </ul>\n                <a className=\"btn btn-primary w-50 mt-2 text-white\" href={`/notes/${note._id.$oid}/update`}>Update</a>\n                <button data-index={note._id.$oid} type=\"submit\" className=\"btn btn-primary w-50 mt-2 mb-2\" onClick={handleDelete}>Delete</button>\n            </div>\n        )\n    )\n    : '';\n \n\n    return (\n        <div className=\"mb-5\">\n            <Button onClick={onClick} showAddTask={showAddTask}/>\n            {\n                showAddTask && <Form notes={notes}/>\n            }\n            {\n            isLoading \n            ? <p className='text-center lead my-4'>Loading...</p>\n            :\n            <div className=\"note-container mt-5\">\n                {\n                noteElements\n                }\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Notes\n","import {useState, useEffect} from 'react';\n\n//Import CSS\nimport './UpdateNote.css';\n\n//Import modules\nimport axios from 'axios';\nimport Moment from 'moment';\n\n//Import config\nimport Config from '../config';\n\nconst UpdateNote = (props) => {\n\n    const [notes, setNotes] = useState('');\n    const [date, setDate] = useState('');\n    const [diet, setDiet] = useState('');\n    const [mood, setMood] = useState('');\n    const [symptoms, setSymptoms] = useState('');\n    const [exercise, setExercise] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [previousId, setPreviousId] = useState('');\n\n    \n    useEffect(() => {\n        //Current id from params\n        const id = props.match.params.id;\n\n        //Only make api call if it's a new id\n        if (previousId !== id) {\n            //Set isLoading to true  \n            setIsLoading(true);\n        \n            //Get note data from api\n            axios.get(`${Config.apiGetIdURL}?Id=${id}`)\n            .then(res => { \n                setNotes(res.data)\n                setDate(Moment(res.data.date).format('yyy-MM-D'))\n                setDiet(res.data.diet || '')\n                setMood(res.data.mood || '')\n                setSymptoms(res.data.symptoms || '')\n                setExercise(res.data.exercise || '')\n                setPreviousId(id)\n            })\n\n            //Set isLoading to false\n            setIsLoading(false);\n        }\n    }, [props.match.params.id, previousId])\n\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n         if (name === 'date') {\n             setDate(value);\n         } else if (name === 'diet') {\n             setDiet(value);\n         } else if (name === 'mood') {\n             setMood(value);\n         } else if (name === 'symptoms') {\n             setSymptoms(value);\n         } else if (name === 'exercise') {\n             setExercise(value);\n         }\n    }\n\n    const handleSubmit = (e) => {\n        //Prevent Default Form Behavior\n        e.preventDefault();\n\n        const id = props.match.params.id;\n\n        //Create object with form values\n        const note = {\n            date,\n            diet,\n            mood,\n            symptoms,\n            exercise\n        }\n        \n        //Post Note using API\n        axios.put(`${Config.apiUpdateURL}?Id=${id}`, note)\n    }\n\n\n    return (\n        <div className=\"form\">\n            <h2>Update Note</h2>\n            { isLoading && notes\n            ? <p className=\"text-center lead mt-4\">Loading....</p>\n            :\n                <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"date\" className=\"form-label\">Date</label>\n                    <input type=\"date\" className=\"form-control\" id=\"date\" name=\"date\" value={date} onChange={handleChange} required/>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"diet\" className=\"form-label\">Diet</label>\n                    <textarea className=\"form-control\" id=\"diet\" name=\"diet\" rows=\"3\" onChange={handleChange} value={diet} required></textarea>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"mood\" className=\"form-label\">Mood</label>\n                    <textarea className=\"form-control\" id=\"mood\" name=\"mood\" rows=\"3\" onChange={handleChange} value={mood} required></textarea>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"symptoms\" className=\"form-label\">Symptoms</label>\n                    <textarea className=\"form-control\" id=\"symptoms\" name=\"symptoms\" rows=\"3\" onChange={handleChange} value={symptoms}></textarea>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exercise\" className=\"form-label\">Exercise</label>\n                    <textarea className=\"form-control\" id=\"exercise\" name=\"exercise\" rows=\"3\" onChange={handleChange} value={exercise}></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary w-75\">Submit</button>\n            </form>}\n            <a className=\"btn w-75 mt-2 btn-secondary mt-5\" href={`/`}>Go Home</a>\n        </div>\n    )\n}\n\nexport default UpdateNote\n","import {useState} from 'react';\nimport { Switch, Route, HashRouter} from 'react-router-dom';\n\n//Import Components\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Notes from '../Notes/Notes';\nimport UpdateNote from '../UpdateNote/UpdateNote';\n\nconst App = () => {\n\n  const [showAddTask, setAddTask] = useState(true);\n\n  //Function to toggle show AddTaskForm\n  const toggleShowAddTask = () => {\n    setAddTask(!showAddTask);\n  }\n\n  return (\n    <div>\n      <Header/>\n      <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" render={(props) => (<Notes onClick={toggleShowAddTask} showAddTask={showAddTask}/>)}/>\n            <Route exact path=\"/notes/:id/update\" component={UpdateNote}/>\n          </Switch>\n      </HashRouter>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './styles.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}